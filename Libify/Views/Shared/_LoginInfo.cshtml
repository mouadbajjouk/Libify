@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> _signInManager
@inject Libify.Services.IUserService _userService

@if (_signInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Salamo alaikom @(User.FindFirst("UserFirstName").Value + " " + User.FindFirst("UserLastName").Value)
        </a>

        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            @if (_userService.IsAdmin())
            {
                <a class="dropdown-item" asp-area="Admin" asp-controller="Home" asp-action="Index">Dashboard</a>
            }
            <a class="dropdown-item" asp-controller="Account" asp-action="ChangePassword">Change Password</a>
            <a class="dropdown-item" asp-controller="Account" asp-action="Logout">Logout</a>
        </div>
    </li>
}
else
{
    <li class="nav-item active">
        <a class="btn btn-primary mr-2" asp-controller="Account" asp-action="SignUp">Sign Up</a>
    </li>
    <li class="nav-item active">
        <a class="btn btn-outline-primary" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Context.Request.Path">Login</a> @*asp-route-returnUrl so when user is on any page and want to login -> after login it will be redirected to the same page before login*@
    </li>
}